package com.comsys.datagenerator;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.FilenameFilter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

/**
 * Created by Alexandra WÃ¶rner on 26.07.15.
 */
public class DataGenerator {

        private static int titleNumber;

        private static String[] titles = {
                "01._Avril_Lavigne_Losing_Grip.wav", "02._Avril_Lavigne_Complicated.wav", "LeAnn_Rimes_-_13_-_Please_Remember_Me.wav",
                "keane_is_it_any_wonder.wav", "keane_everybodys_changing.wav", "3_Doors_Down_-_03_-_Let_Me_Go.wav", "03._Sia_-_Day_too_soon.wav",
                "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29",
                "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49",
                "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69",
                "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89",
                "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100"
        };

        private static List<String> titles2 = new ArrayList<String>();

        private static String[] features = {
        	"0.008355662157535556, 0.0095572, 0.031395, -0.0000519228, 0.000001449, 0.00049307, 0.00007323818182414935, -0.298047, -0.0011013, 0.24436275330185894, -0.000055083, -0.00060986, 0.0016742, -0.00583153, 0.041196, -0.212857, -0.021095413, -0.09731376, 0",
        	"-0.008332764542102813, 0.0093502, 0.071442, 0.0000341404, 0.000017549, 0.00007835, 0.00009145463484222229, -0.230783, -0.0001383, 0.060354160761833094, -0.000055529, -0.00043494, -0.0001255, -0.00581097, 0.015571, -0.161011, -0.021846687, -0.07892631, 0",
        	"0.012181296346187592, -0.0012658, -0.031454, -0.0000191952, 0.000087021, 0.00077929, 0.0001269519214265244, -0.275727, -0.0027696, 0.12822393643856045, 0.000029455, 0.00083069, 0.0002896, -0.00750815, 0.0437, -0.176144, -0.022252502, -0.02077916, 0",
        	"0.003514772446155548, -0.0035727, 0.113163, -0.0000877027, 0.000050531, -0.00023747, 0.00021239478075147153, -0.173422, -0.0022013, 0.21037066120505335, 0.000035207, 0.00083134, 0.0040739, 0.00096352, 0.070051, -0.082511, -0.008143515, -0.08007377, 0",
        	"-0.001582607028484343, 0.0105445, 0.09698, -0.0000088851, 0.00002225, 0.00030417, 0.00008814536917938603, -0.117602, -0.0025089, 0.20770581279993058, 0.000077053, 0.00095779, 0.0041797, 0.00600049, 0.052798, -0.038444, 0.008652885, -0.11757411, 0",
        	"-0.000243015866279601, 0.0066466, -0.015361, 0.0000408991, 0.000024009, 0.00022709, 0.00009063222091780231, -0.252076, -0.0001729, 0.24055474433302884, -0.00004911, -0.00035085, -0.0000331, -0.0028417, 0.028008, 0.094845, -0.006510181, 0.04703611, 0",
        	"-0.008025421340465546, 0.0110399, 0.003236, 0.0000541895, -0.000002717, 0.00077101, 0.00019813963874480034, -0.228163, -0.0000331, 0.16861274998188017, 0.000013008, -0.00007194, 0.0027174, -0.00111161, 0.034753, -0.199544, -0.016271373, -0.10632353, 0",
        	"0.006091206624507904, 0.0060495, 0.089746, -0.000002081, 0.000008588, -0.00011901, 0.00005946341392821807, -0.032303, -0.0014591, 0.12370252640247341, 0.000041359, -0.00035659, 0.0034839, -0.01421349, 0.008375, 0.058292, 0.006345986, -0.02561745, 0",
        	"0.010473483633995058, 0.00145, 0.04505, -0.0000403388, 0.000075132, 0.00025209, 0.00015451951239344872, -0.246896, -0.0006233, 0.14455178096890448, 0.000102092, -0.00069702, 0.0020782, 0.00481126, 0.013884, -0.081312, -0.0178193905386828, 0",
        	"-0.001544205734729766, 0.0063822, -0.004518, 0.0000936481, 0.000019095, 0.00028795, 0.00001224595152588388, -0.263295, -0.0024307, 0.21501595317125322, 0.00007363, 0.00113932, 0.0000141, 0.00070656, -0.000121, -0.196557, 0.004717012, 0.07891819, 0",
        	"0.000500010569095611, 0.0088597, 0.090156, 0.0000516223, 0.000007613, 0.0007201, 0.00006471134876064375, -0.201668, -0.0019154, 0.04117299995422352, 0.000090459, 0.00063075, 0.0030702, -0.01346363, 0.045323, -0.186503, -0.010813023, 0.11022614, 0",
        	"-0.003145493006706237, 0.0023568, 0.119851, -0.0000803383, 0.000070186, 0.0005319, 0.00020642050681677384, -0.284887, -0.0021092, 0.20102491927146912, 0.000039346, -0.00065843, 0.0010317, -0.01012853, -0.003713, -0.025639, -0.000899209, 0.02684563, 0",
        	"-0.01394216126680374, -0.0020614, 0.023924, -0.0000474656, 0.000080477, -0.00020995, 0.00003328126699958752, -0.318028, -0.0015478, 0.038530872583389164, -0.000065302, -0.000707, 0.0040488, 0.00643838, 0.057051, 0.086318, -0.016062689, -0.05445831, 0",
        	"0.012335734536647798, 0.0071468, 0.052313, -0.000076408, 0.00002637, -0.00003012, 0.00021224542285257022, -0.056431, -0.0010673, 0.07183795353770248, 0.000020224, 0.00070037, 0.0039209, 0.00004937, -0.003678, -0.149521, -0.014123055, -0.08758503, 0",
        	"0.006106793348789217, 0.0104295, 0.113154, 0.0000838806, -0.00000834, 0.0003363, 0.00007096035830718142, -0.114646, -0.002317, 0.1840079256117344, 0.000041018, -0.00020611, 0.0027406, -0.01188239, 0.036399, -0.016081, -0.012906028, -0.02437617, 0",
        	"-0.014049079875946044, 0.0039544, 0.081952, -0.000061432, 0.000055555, 0.00017369, 0.00013746304484284378, -0.230785, -0.0032956, 0.20424809275865558, 0.00002903, -0.00005993, 0.0022444, -0.00729523, 0.051019, -0.173766, -0.014433922, 0.0421243, 0",
        	"-0.002896451909542084, 0.0068319, 0.042694, 0.0000947245, 0.000033315, 0.00004313, 0.00004986398580625179, -0.032014, -0.0024553, 0.14563884376883504, 0.000026441, -0.00068423, 0.0041061, -0.0075971, 0.047251, 0.034025, -0.019831035, 0.02697016, 0",
        	"0.001617007079124452, 0.0112938, -0.028989, -0.0000862152, 0.000040349, 0.00017373, 0.00002551713551660093, -0.164573, -0.0018576, 0.048448126590251814, 0.000005523, 0.00007532, 0.0021436, -0.01168882, 0.05611, 0.031492, -0.020234011, -0.02790114, 0",
        	"-0.01450088483095169, 0.003749, 0.057622, -0.0000680247, 0.000030862, -0.00012994, 0.00015973069254832426, -0.222423, -0.0032455, 0.08005698075294487, 0.000015961, 0.00105063, 0.0010084, 0.00598236, 0.068196, -0.07212, -0.017910348, -0.00750802, 0",
        	"0.009449811782836914, -0.0005889, -0.024492, 0.0000513593, -0.000018869, 0.00014529, 0.000228126721219829, -0.262358, -0.0003583, 0.20740595274567605, -0.00006723, 0.00012455, 0.0005056, 0.00070687, 0.019003, -0.15494, -0.012352526, 0.02687283, 0",
        	"-0.000886186370849609, 0.0096045, 0.007915, -0.0000646622, 0.000033054, 0.00042234, 0.00004448526651335145, -0.061044, -0.0011569, 0.08667748695611946, 0.000018734, -0.0005087, 0.0046281, -0.01364092, 0.026013, -0.026519, -0.000555107, 0.12085931, 0",
        	"-0.01488394626379013, 0.0059373, 0.033861, -0.0000336775, 0.000021803, 0.00074642, 0.0001605804623741373, -0.017189, -0.001172, 0.16192118560075758, 0.000004203, -0.00001939, 0.0036001, 0.0012366, -0.000147, 0.081936, -0.000430692, 0.02605765, 0",
        	"0.01016246906042099, 0.003876, -0.035247, 0.0000694535, 0.000029309, 0.00082632, 0.00006311513961827348, -0.295887, -0.0014189, 0.20162056202292444, 0.000008362, -0.00010998, 0.0001442, -0.013547, 0.037011, 0.098054, -0.00937553, 0.05468607, 0",
        	"0.004727581889629366, 0.0039187, 0.072681, -0.0000768651, 0.000069737, 0.00022466, 0.00006519423014550008, -0.056645, -0.0010192, 0.06853624924421302, -0.000004312, 0.00071932, 0.0037837, -0.00492973, 0.017152, -0.128828, 0.000554116, -0.12081733, 0",
        	"-0.014681742537021637, 0.0025995, 0.08733, 0.0000206867, 0.000033646, 0.00052973, 0.00004998297627339673, -0.194545, -0.0001117, 0.14406452922224997, 0.000016331, 0.00015932, 0.0005619, 0.00641666, 0.033088, -0.12298, -0.016561297, 0.00702551, 0",
        	"0.007139833033084872, 0.0010072, -0.036866, 0.0000232093, 0.000078618, -0.0001224, 0.00021329929039430663, -0.009326, -0.0026409, 0.14778626192212102, 0.000008224, 0.00028371, 0.0001784, -0.00280314, -0.006147, 0.099994, -0.016331851, 0.02172439, 0",
        	"0.003118608973026278, 0.0008079, 0.100075, 0.0000255481, 0.000039699, 0.00080215, 0.00012084295504543874, -0.322272, -0.0001479, 0.1068306502759456, -0.00002433, 0.00095419, 0.0046149, -0.0127197, 0.074394, -0.155204, 0.008261164, 0.06128034, 0",
        	"-0.011107138628959654, 0.0093553, 0.085497, -0.0000039739, -0.000001603, 0.00047221, 0.00017592109999491844, -0.125715, -0.003368, 0.09486159138083451, 0.000031946, 0.00027495, 0.0036177, -0.01022947, 0.008381, 0.082257, -0.010201833, -0.0272205, 0",
        	"-0.001134241852760315, 0.0034682, 0.088732, -0.0000283747, 0.000055037, 0.00065587, 0.0001965493406062129, -0.063243, -0.0019503, 0.05892796492576589, -0.000017055, 0.00106917, 0.004627, -0.00665584, 0.000544, -0.024923, 0.003747291, -0.10461678, 0",
        	"-0.001502104344367981, 0.0015378, 0.080997, -0.0000427063, 0.000085618, 0.00006409, 0.000222976331956938, -0.132659, -0.0013483, 0.11320211939215655, 0.000006016, -0.00030316, 0.0017971, -0.01257186, 0.068956, -0.181159, -0.009205647, -0.0569886, 0",
        	"-0.006143890798091889, 0.0044588, 0.013243, 0.0000053703, 0.000088739, 0.00058103, 0.00023478024232618757, -0.312795, -0.0000207, 0.1709051037788391, 0.000095057, -0.00041408, 0.0025964, -0.01265807, -0.000212, -0.18111, -0.015373586, -0.05725683, 0",
        	"0.009065829365253448, 0.0076063, 0.085543, -0.0000899341, 0.000004175, 0.00065733, 0.00002678117986345914, -0.331408, -0.0029367, 0.25150807144045834, 0.000039453, 0.00016547, 0.0012699, 0.00058204, -0.004099, -0.142065, -0.010632029, -0.00514308, 0",
        	"-0.00498229385137558, 0.0009585, -0.033715, -0.0000909342, 0.000085246, 0.00014632, 0.0002246526758212078, -0.007925, -0.0012822, 0.22420943840742114, -0.000036865, -0.00018023, 0.0001442, -0.01011093, 0.050688, 0.043395, -0.013495183, 0.0086817, 0",
        	"-0.010969673128128053, 0.011026, 0.115284, 0.0000366055, -0.000020661, 0.00020678, 0.00015226491267807305, -0.082212, -0.001399, 0.13832264041304584, 0.000065349, 0.00022611, 0.0028876, 0.00047807, 0.074512, -0.15698, -0.012691861, -0.12321557, 0",
        	"0.013255087361335757, 0.0122127, 0.120122, -0.0000433867, 0.000074599, 0.00048017, 0.0002084381201032354, -0.104686, -0.0001304, 0.0891075311303138, 0.000088288, 0.00111986, 0.0016146, -0.0098624, -0.002377, -0.113523, -0.018913434, 0.06515214, 0",
        	"-0.014223348860740661, 0.0108634, 0.080213, 0.0000758555, 0.000047126, 0.00063108, 0.00017871210229290919, -0.132595, -0.0032161, 0.19052795300483705, -0.000043675, 0.00069498, 0.0028417, -0.00034508, 0.037372, -0.219348, 0.007091082, -0.1137839, 0",
        	"0.006574533314704896, 0.0002539, -0.023091, -0.0000609466, 0.000019459, -0.00007551, 0.00011509209464234339, -0.192237, -0.002299, 0.18714420137405396, 0.000005715, -0.00036889, 0.0020945, 0.00589672, 0.019082, -0.093898, -0.021972396, 0.07423759, 0",
        	"0.009868229694366458, 0.0095103, 0.066283, -0.0000432883, 0.000070187, 0.00028971, 0.00020581649187572334, -0.287984, -0.000195, 0.04145508030652988, 0.000074359, 0.00069539, 0.0034813, -0.01450801, 0.01229, -0.027866, -0.001193105, 0.01160191, 0",
        	"-0.000396976509094238, -0.0024845, 0.106251, 0.000038147, -0.000024163, 0.00033868, 0.0002080974810013522, -0.253495, -0.0026904, 0.013254138767719137, -0.000044309, -0.00029527, 0.0018525, 0.00117501, 0.013057, 0.012248, 0.004920159, 0.0421184, 0",
        	"0.006889393403530121, 0.0096135, 0.025009, -0.0000802839, 0.000057857, -0.00012449, 0.00018062443808071727, -0.100357, -0.0001172, 0.04152877588272083, 0.000097653, 0.00049227, 0.0017582, 0.00381198, 0.034648, 0.038881, -0.019970809, 0.05171385, 0",
        	"-0.01388850717306137, 0.0027591, -0.005617, 0.0000475116, -0.000013785, 0.00078932, 0.00021624386673370728, -0.036277, -0.001319, 0.053617639350891005, -0.000019261, -0.00061424, 0.0031992, 0.0024496, 0.045319, -0.040684, -0.018015104, 0.08480312, 0",
        	"-0.003240318529605865, 0.0104879, 0.09139, -0.000073674, 0.000066209, 0.00007274, 0.00001947337226966005, -0.187157, -0.0025214, 0.053276429742574585, 0.000000907, -0.00034209, 0.0027398, -0.00241294, 0.005811, -0.192893, -0.007660803, -0.07233943, 0",
        	"0.003046531593799593, 0.0116858, 0.085334, -0.0000801373, 0.000057571, 0.000358, 0.0001925192126242304, -0.166368, -0.0016085, 0.027602979695796847, -0.000055175, -0.00035552, 0.0016101, 0.00026821, 0.021647, 0.081029, -0.000254882, 0.06365895, 0",
        	"-0.010615519485473632, 0.0072154, 0.024036, -0.000052848, -0.00000879, 0.00067951, 0.00021505506862457746, -0.184774, -0.0025249, 0.22703531967997553, 0.000022318, 0.00083896, 0.0026642, -0.00823573, 0.05775, 0.06038, 0.008147194, -0.04103141, 0",
        	"-0.014249026920795441, 0.0083592, 0.015486, -0.0000510828, 0.000088484, 0.00005505, 0.00009731802843107898, -0.288185, -0.000153, 0.01782123339176165, 0.006554, -0.00051189, 0.0037174, -0.01439505, 0.026126, -0.072604, -0.008734292, -0.10558993, 0",
        	"-0.011274364683628083, 0.010585, 0.070261, -0.0000041271, -0.000006329, -0.00006311, 0.0000838736604337957, -0.123798, -0.0026266, 0.10597874032855029, 0.000071384, 0.00112215, 0.0010668, -0.00269816, -0.005382, -0.206704, -0.016922106, -0.09301297, 0",
        	"0.012876006090641023, 0.0087598, 0.054122, 0.0000664395, 0.00000634, 0.00037066, 0.00013295723513464092, -0.250119, -0.0013235, 0.2070094335615635, 0.000109548, -0.00061296, -0.0003431, 0.00026081, 0.035808, 0.072936, -0.004929617, 0.06673574, 0",
        	"-0.003718302431106567, 0.0002384, 0.067191, 0.0000016826, 0.000006205, 0.00031682, 0.0000481386730575631, -0.056316, -0.0027689, 0.1035704925835132, 0.000018867, 0.00031398, 0.0048309, -0.0023728, 0.00178, 0.097808, -0.019949221, 0.07080266, 0",
        	"0.008625805115699768, 0.0083315, 0.054582, -0.0000469581, 0.000089918, -0.00018161, 0.00015585527318430716, -0.306915, -0.0017462, 0.0038143296301363506, 0.000042335, -0.00013725, 0.0002428, -0.00343346, 0.028776, -0.143123, -0.014922979, -0.09061202, 0",
        	"0.010741262192726137, 0.0083438, 0.055968, 0.0000432055, -0.000006825, -0.00001876, 0.000122412690734848, -0.30594, -0.0026422, 0.16767771651744842, 0.000029928, 0.00078049, 0.0016875, 0.00216423, 0.035054, -0.196542, -0.018449501, -0.08573042, 0",
        	"0.009493245279788972, 0.0008149, 0.011002, -0.0000410914, 0.000001451, 0.00020092, 0.00011624904056521218, -0.199466, -0.002804, 0.22122961795926097, -0.00005689, 0.0007595, 0.0041404, -0.00179568, 0.034023, 0.010762, -0.004007549, 0.03771807, 0",
        	"0.009023236064910891, 0.000983, -0.033991, 0.0000057759, 0.000065851, 0.00003855, 0.00003981057298379881, -0.143314, -0.0021696, 0.111421693688631, 0.000059452, 0.00076771, 0.004468, -0.01049504, 0.001311, -0.112599, -0.004026663, 0.11099896, 0",
        	"0.007329677970409393, 0.005129, -0.010909, -0.0000789182, 0.000055558, 0.0008523, 0.0001369124810639622, -0.175136, -0.0031967, 0.08761659777760498, -0.000041869, -0.00017086, 0.0021355, 0.00408942, 0.022638, 0.020681, -0.020533794, 0.02554987, 0",
        	"0.007161019272804261, 0.010793, 0.081546, -0.0000651727, 0.000040942, -0.00021768, 0.00009688784182402126, -0.31491, -0.0004615, 0.14742396828532217, 0.000085437, 0.00069774, 0.0048324, -0.01138212, 0.074542, -0.049313, 0.006814206, 0.04926778, 0",
        	"-0.013947890043258667, 0.0061085, 0.085549, -0.0000301237, 0.000030273, 0.00020163, 0.00002893974677804071, -0.142019, -0.0033543, 0.22700127602219586, 0.000008339, -0.00054784, -0.0001301, 0.0004849, 0.062276, -0.114193, -0.002303087, -0.02992526, 0",
        	"0.007206792035102846, 0.0052679, 0.055647, 0.000043852, 0.000005952, 0.00062685, 0.00007590208353369122, -0.225591, -0.0017227, 0.01043251674175249, 0.000034106, -0.00068903, 0.0029731, -0.00979697, 0.070752, 0.083909, -0.008625217, 0.02488445, 0",
        	"-0.011992723808288573, 0.0116335, -0.005712, -0.000070378, 0.000074899, 0.00069692, 0.00021001679233390875, -0.031607, -0.0005425, 0.1815470208466053, 0.000048915, 0.0007934, 0.0046786, -0.00191414, 0.008833, -0.122032, -0.011016818, 0.00754942, 0",
        	"0.009247507519721984, 0.0089495, -0.003946, -0.0000133451, 0.000043023, -0.00021355, 0.00015476368447388078, -0.237759, -0.0005492, 0.06569662015438071, 0.000067391, -0.00020537, -0.0001505, 0.00168435, 0.063294, -0.040084, 0.000778159, -0.05938919, 0",
        	"0.003420133633613586, 0.0110176, 0.026024, 0.0000929381, -0.000004679, -0.00021415, 0.00007626098791740572, -0.018836, -0.0004552, 0.14663521947860714, -0.000070517, 0.00038142, 0.0043035, -0.001263, 0.068625, -0.058061, 0.002576847, 0.01314169, 0",
        	"-0.005941498565673827, 0.0076926, -0.005946, 0.0000446438, 0.000039439, 0.00080873, 0.00008679333211744784, -0.076341, -0.001604, 0.05328663071393956, -0.000052487, -0.00028796, 0.0037049, -0.00841304, 0.0096, 0.024462, 0.006983299, 0.05367318, 0",
        	"0.011024704673290255, 0.0090554, 0.093332, 0.0000233884, -0.00000521, 0.00040634, 0.00011259026929481847, -0.303999, -0.0023, 0.1562121581673622, 0.000082902, -0.00050641, 0.0008345, 0.00112039, 0.020288, -0.204787, -0.016156688, -0.00330979, 0",
        	"-0.009293525774478912, 0.0085809, 0.010644, 0.0000826841, 0.000028104, -0.00006629, 0.0002339710511211301, -0.171126, -0.0005237, 0.24518616722226147, -0.000001617, -0.0002583, 0.0018242, -0.00482746, 0.002905, 0.046446, -0.017843246, 0.08576226, 0",
        	"0.004428403675556183, 0.003301, 0.09136, 0.0000456608, -0.000016342, 0.00076439, 0.0001502852866955429, -0.085009, -0.0028389, 0.10870914475321763, 0.000036275, -0.00069517, -0.0002859, -0.00809131, 0.030897, -0.216705, 0.00378365, 0.03257906, 0",
        	"0.011312999827861788, 0.0114995, 0.052656, -0.0000789766, 0.000029437, 0.00086635, 0.00008888458082307136, -0.193185, -0.0020256, 0.016182196485996118, -0.000071205, 0.00089317, 0.0012809, 0.0006698, 0.043796, -0.058758, 0.004101244, -0.10718021, 0",
        	"-0.014265143256187439, 0.0052413, -0.004754, -0.0000584077, -0.000019206, 0.00088178, 0.00014781943162696183, -0.310889, -0.0023179, 0.17110540962815285, 0.000088253, 0.00083976, 0.001782, -0.00210097, 0.07109, -0.040432, -0.01294868, 0.02086253, 0",
        	"0.009304824008941651, 0.0074155, 0.090939, -0.0000542271, 0.000020392, 0.00013577, 0.00020521137037235332, -0.022682, -0.0027571, 0.16276431937813757, -0.000006936, 0.00101696, -0.0002901, -0.01152157, 0.047518, 0.094824, -0.0232467, -0.09122302, 0",
        	"0.006961853179931641, 0.0114347, 0.096401, -0.0000837259, 0.000084657, -0.00016457, 0.0001474466321822223, -0.043482, -0.001247, 0.12773703331351277, -0.000035872, -0.00064676, 0.002096, 0.00594808, 0.049286, -0.107036, 0.008643119, -0.12004358, 0",
        	"-0.00812962546825409, 0.0049216, -0.016526, -0.0000774812, -0.000017828, 0.00088717, 0.00004556070501675979, -0.157455, -0.0001395, 0.1536475005805492, 0.00009837, 0.00008739, 0.0000518, -0.00698194, 0.071886, 0.065931, -0.002348617, -0.0769043, 0",
        	"-0.010216901848316192, -0.0029096, 0.06435, -0.0000782652, 0.000085096, 0.00082061, 0.00005987153932447493, -0.131035, -0.0033768, 0.0763011134505271, -0.000022529, -0.00018079, 0.0013665, 0.00616208, 0.037216, -0.176543, -0.022525307, -0.04696548, 0",
        	"-0.00774710441827774, 0.0100866, 0.094154, -0.0000691132, -0.000021952, -0.00019553, 0.0001709012430643787, -0.180604, -0.0026003, 0.14800568132996555, 0.000019607, -0.00061054, 0.0024063, -0.00680984, 0.012637, 0.092, -0.002833157, -0.0196317, 0",
        	"0.012208705067634584, -0.0035806, -0.036785, -0.0000331994, -0.000016941, -0.00009491, 0.00003042293248552076, -0.24415, -0.0001157, 0.1381811000406742, -0.000059373, 0.00086063, 0.0037018, -0.00199771, 0.03863, -0.167575, -0.002637433, 0.01378016, 0",
        	"-0.014071273274421692, 0.0110484, 0.009423, -0.0000699061, 0.000080685, -0.00002091, 0.00000770990044998641, -0.279604, -0.0001655, 0.1537864187121391, 0.000040413, 0.00046819, 0.0039875, 0.00427432, 0.044274, -0.149911, -0.006199443, -0.10584103, 0",
        	"0.001417431659698489, -0.0009198, 0.083826, -0.0000291044, 0.000088373, 0.00066339, 0.00022615502326606916, -0.021792, -0.0030983, 0.18375597829222678, -0.000046318, -0.00004004, 0.0003316, -0.00851584, 0.012853, -0.123149, -0.013492667, -0.10368851, 0",
        	"-0.00223202514886856, -0.0003957, 0.095387, -0.0000380287, 0.000057489, 0.00041235, 0.00011748413219922888, -0.003405, -0.0009518, 0.2043017804861069, 0.000106573, 0.00061661, 0.0034638, 0.00243477, 0.057319, -0.210403, -0.003345211, 0.10961425, 0",
        	"-0.012529801537990569, 0.0115714, 0.042073, 0.0000220026, 0.000054939, 0.00044346, 0.0001422060650938482, -0.327091, -0.0004326, 0.17851607428193092, -0.000069809, -0.00003122, -0.0004831, -0.01052036, 0.009949, 0.095321, -0.019801451, 0.02706963, 0",
        	"0.002510186343193057, -0.0032079, 0.071811, -0.0000821152, 0.000023339, -0.00020884, 0.00002326790052740734, -0.191518, -0.0027443, 0.08625492725372307, -0.000020822, 0.0011315, -0.0005233, -0.00216919, 0.016396, -0.187733, -0.02142203, -0.11663868, 0",
        	"-0.005325831933021545, 0.002195, 0.013803, 0.0000360275, 0.000003096, 0.00047487, 0.00018096392859892703, -0.282953, -0.0020352, 0.006750996786355835, 0.000110101, 0.00078983, 0.0038457, -0.00431444, -0.000367, -0.214195, -0.007183563, 0.07736628, 0",
        	"0.012277283422946933, 0.0020528, 0.030886, -0.0000230917, 0.000029215, 0.00089056, 0.00009083206046986314, -0.163554, -0.0020621, 0.009592687290906772, -0.000069738, 0.0008495, 0.0006922, -0.00052539, 0.010623, -0.051596, -0.019900688, 0.08032611, 0",
        	"0.008896321494579315, 0.0038602, 0.019071, 0.0000843828, 0.000029662, 0.0008391, 0.0001263329608906012, -0.083989, -0.0001352, 0.1675934561908245, -0.000022818, 0.0006734, 0.0025618, -0.01167782, 0.017365, 0.097284, -0.003381849, -0.00920811, 0",
        	"-0.009597752349376678, 0.0066254, 0.092839, 0.0000892116, -0.000000501, -0.00009539, 0.00006009212341824755, -0.263619, -0.0021462, 0.0844422313153743, 0.00011114, 0.00045431, 0.0039945, -0.01416417, 0.061564, 0.070133, 0.006108674, 0.04054245, 0",
        	"-0.00092872760772705, 0.0109552, 0.08772, 0.0000582899, 0.00004156, 0.00070386, 0.00023420137016189106, -0.023647, -0.0033485, 0.045685588347911726, 0.000084093, -0.00051016, 0.0025613, -0.00693242, 0.05425, -0.105435, 0.008201307, -0.08130074, 0",
        	"-0.001867869935035705, 0.0055055, -0.00924, -0.0000681317, 0.000089067, 0.00077198, 0.00005062997905949346, -0.129957, -0.0008723, 0.24563150858879093, -0.000045663, 0.00062575, 0.0023284, -0.01088009, 0.020118, 0.042633, 0.006476157, -0.11462206, 0",
        	"-0.003057187983989716, -0.0027878, 0.023313, 0.0000666815, 0.000073011, -0.00010352, 0.00004162492898141515, -0.178797, -0.0022857, 0.12401514903903003, 0.000048654, 0.00047272, 0.0037868, -0.00888618, 0.051767, -0.064289, -0.018300875, 0.07488969, 0",
        	"0.010593033916950228, 0.0100393, 0.115491, -0.0000654363, 0.000003418, 0.00015632, 0.00007280408723117833, -0.07626, -0.0004079, 0.03861704275012005, 0.000014276, 0.0001702, -0.0004529, 0.00190937, 0.025635, -0.221486, -0.000802967, 0.01659448, 0",
        	"0.000390039963722231, 0.0017449, -0.028589, -0.0000860208, 0.000031679, 0.00023623, 0.0001786817488682708, -0.011965, -0.0001357, 0.045733607184886824, 0.000053084, 0.00047213, 0.0035158, -0.00194705, 0.007209, 0.041276, -0.022337681, -0.11546184, 0",
        	"0.01080443312883377, 0.0093002, 0.067019, 0.0000232649, 0.00004569, 0.00064107, 0.00016448828020201625, -0.031563, -0.0013687, 0.22538864341378215, 0.000091307, 0.00037265, 0.0001134, 0.00586758, 0.021047, -0.168536, 0.001072882, -0.01788506, 0",
        	"-0.014172414634227753, 0.007345, 0.000177, 0.0000439951, 0.000047781, 0.00083385, 0.00002542429633870374, -0.242038, -0.0023618, 0.2419736039578915, -0.000025305, -0.00009511, 0.0047574, 0.00277154, 0.034161, -0.100222, -0.01976512, 0.01551154, 0",
        	"0.004900382325649261, -0.0000116, 0.040994, 0.0000683702, 0.000059917, 0.00039269, 0.00007435106135388828, -0.14526, -0.0004715, 0.17987585012316704, -0.000029942, 0.00071551, 0.0039604, -0.00632339, 0.005027, 0.014635, 0.005384427, -0.05876881, 0",
        	"0.007039878361225131, -0.0011183, 0.049346, -0.0000151582, 0.00003005, -0.00014452, 0.00009175835118113973, -0.231241, -0.0025203, 0.06290787466168395, 0.000053662, 0.00002483, 0.0012075, 0.00466761, 0.045257, -0.088253, -0.020034551, -0.02632102, 0",
        	"0.009628382287025452, -0.0003989, 0.054215, -0.0000772478, -0.000001913, 0.00052375, 0.00005240229969608543, -0.311447, -0.0005515, 0.1977871339917183, 0.000055232, 0.00082656, 0.0041689, -0.01195451, 0.072528, -0.192673, -0.006350368, 0.02570713, 0",
        	"0.00176095896959305, 0.0076308, 0.103053, -0.0000959195, 0.000024394, 0.00088361, 0.00022730916776534416, -0.178008, -0.00131, 0.11785876429677004, 0.000087812, -0.00017921, 0.0014011, -0.00881811, -0.007842, -0.169316, -0.022324896, -0.11698817, 0",
        	"-0.002520135388374327, 0.0106627, 0.095115, -0.0000699422, 0.000010753, 0.00025903, 0.00006318216367775417, -0.207495, -0.0023344, 0.04897607612013806, 0.000000408, 0.00019065, 0.0014085, 0.00465572, 0.046663, -0.013252, -0.0091965, 0.12175898, 0",
        	"-0.004889446740150452, -0.0003829, -0.018501, -0.000019815, 0.000035747, -0.00020137, 0.0002342843063073843, -0.269693, -0.001254, 0.2437153175055981, 0.000013853, -0.0000365, 0.0007656, 0.00200183, 0.037272, -0.219648, -0.017873231, 0.07503349, 0",
        	"0.008812098965644838, 0.0033987, 0.023404, -0.00000334, 0.000044655, 0.00062889, 0.00019986982597054215, -0.205305, -0.0022066, 0.12336125616431232, -0.000004062, -0.00056933, 0.0028181, 0.0031681, 0.034119, -0.226687, -0.00279709, 0.00517455, 0",
        	"0.000431434009075164, 0.0113368, 0.047064, -0.0000418638, 0.000004486, 0.00001273, 0.00012695124908486188, -0.058922, -0.0028177, 0.12508434119224543, 0.000093054, -0.00058367, 0.0011749, -0.01450641, 0.042, -0.09425, -0.009456882, 0.01618044, 0",
        	"0.008877194454669954, 0.0121423, 0.037484, -0.0000409601, -0.000004827, 0.00002734, 0.0000971455027590573, -0.124861, -0.0008859, 0.25429560433626175, 0.000018025, -0.00065476, 0.002261, 0.0000463, 0.006755, 0.052307, -0.021718482, 0.09396932, 0",
        	"0.013115814001560212, 0.0071458, 0.025306, -0.0000413422, 0.000001008, 0.00053334, 0.00003050747944958042, -0.207007, -0.0007138, 0.2157394339501858, 0.000070663, 0.00083758, 0.0028284, -0.01445241, 0.015809, -0.183524, 0.000962834, 0.00292638, 0",
        	"0.004910531110763552, 0.0011129, -0.032111, 0.0000244105, 0.000073319, -0.00017263, 0.00022727363170705733, -0.078759, -0.0000010913, 0.11604864512681956, 0.000114495, 0.00038286, 0.0026093, -0.0117287, 0.014526, -0.186032, -0.006299244, 0.12290831, 0",
        	"-0.013727710058689117, -0.0003762, -0.030426, 0.0000625232, 0.000043938, 0.00089267, 0.00018762267436028798, -0.13382, -0.0017414, 0.08126612174510948, 0.000091837, 0.00089218, 0.0043322, -0.01133609, 0.042625, -0.093492, 0.002324343, -0.10411178, 0",
        	"0.001325002851486208, 0.0119823, -0.030818, 0.0000128123, 0.000041081, 0.00043958, 0.00007738648786043455, -0.184144, -0.0021243, 0.07263987417817107, 0.000103928, -0.00003733, 0.0009415, -0.00336733, 0.002158, -0.049264, -0.004510626, 0.04257315, 0"
        };

        public static void main(String args[]) {
                System.out.println("Generating data....");
                String data;
                
                if(args[2].equals("learn")) {
                	data = generateLearnData(Integer.parseInt(args[0]), false);
                }
                else {
                	data = generateRecommendationData(Integer.parseInt(args[0]), false);
        		}
        
                try {
                        saveToFile(data, args[1], false);
                } catch (Exception e) {
                        e.printStackTrace();
                }
                System.out.println("Data generated");
        }

        public static void saveToFile(String s, String filename, Boolean append) throws IOException {
                File file = new File(filename);

                //true = append file
                FileWriter fileWriter = new FileWriter(file,append);
                BufferedWriter bufferWriter = new BufferedWriter(fileWriter);
                bufferWriter.write(s);
                bufferWriter.close();

        }

        public static String generateLearnData(int n, boolean sample) {
                return "{ 'user' : " +
                        generateUser() +
                        ",'feedback' : true," +
                        "'toLearn' : " +
                        generateData(n, false, sample) +
                        "}";
        }

        public static String generateRecommendationData(int n, boolean sample) {
                return "{ 'user' : " +
                        generateUser() +
                        "," +
                        "'toRecommend' : " +
                        generateData(n, false, sample) +
                        "}";
        }

        private static String generateUser() {
                return "{ 'userid' : 'user1' }";
        }

        public static String generateData(int n, boolean missingValues, boolean sample) {
                String s =  "{" +
                        "'header' : {" +
                        "'relation' : 'instance', " +
                        "'attributes' : [{" +
                        "'name' : 'songname'," +
                        "'type' : 'string'," +
                        "'class' : false," +
                        "'weight' : 1.0";

                s +=    "}, {" +
                        "'name' : 'index'," +
                        "'type' : 'nominal'," +
                        "'class' : false," +
                        "'weight' : 1.0," +
                        "'labels' : [";

                s += addClassLabels(sample);

                s +=    "]" +
                        "}, {" +
                        "'name' : 'Spectral Centroid Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Derivative of Spectral Centroid Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Running Mean of Spectral Centroid Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Spectral Rolloff Point Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Derivative of Spectral Rolloff Point Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Running Mean of Spectral Rolloff Point Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Spectral Flux Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Derivative of Spectral Flux Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Running Mean of Spectral Flux Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Compactness Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Derivative of Compactness Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Running Mean of Compactness Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Spectral Variability Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Root Mean Square Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Fraction Of Low Energy Windows Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Zero Crossings Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Strongest Beat Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Partial Based Spectral Centroid Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'Partial Based Spectral Flux Overall Average'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'temp'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'humidity'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'clouds'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'rainVolume'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'snowVolume'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'visibility'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'season'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'dayOfWeek'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'timeOfDay'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'mLatitude'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'mLongitude'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xLinearAccAverage'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xLinearAccMax'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xLinearAccMin'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xLinearAccSma'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yLinearAccAverage'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yLinearAccMax'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yLinearAccMin'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yLinearAccSma'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zLinearAccAverage'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zLinearAccMax'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zLinearAccMin'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zLinearAccSma'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xGyrosAverage'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xGyrosMax'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xGyrosMin'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'xGyrosSma'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yGyrosAverage'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yGyrosMax'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yGyrosMin'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'yGyrosSma'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zGyrosAverage'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zGyrosMax'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zGyrosMin'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}, {" +
                        "'name' : 'zGyrosSma'," +
                        "'type' : 'numeric'," +
                        "'class' : false," +
                        "'weight' : 1.0" +
                        "}" +
                        "]" +
                        "}, " +
                        "'data' : " +
                        generateInstances(n,missingValues,!sample) +
                        "}";

                return s;
        }

    private static String generateInstances(int n, boolean missingValues, boolean fromDirectory) {
        String s = "[";

        for (int i = 0; i < n; i++) {
            s += "{ 'sparse' : false, 'weight' : 1.0, 'values' : [";

            if(missingValues) {
                s += "'?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', " +
                        "'?', '?', '?', '?', '?', '?', '?', ";
            } else {
                // music features
                s += "'', ";
                s += addTitle(fromDirectory) + ", ";
                s += addMusicFeatures() + ", ";
                
                // don't need that right now because music features should be the same for a certain title
                /*
                s += addRandomNumber(-0.01529, 0.01483, 18) + ", ";
                s += addRandomNumber(-0.003697,	0.01225, 7) + ", ";
                s += addRandomNumber(-0.03726, 0.1227, 6) + ", ";
                s += addRandomNumber(-0.0000966, 0.00009654, 10) + ", ";
                s += addRandomNumber(-0.00002496, 0.00009091, 9) + ", ";
                s += addRandomNumber(-0.0002519, 0.0009109, 8) + ", ";
                s += addRandomNumber(-0.0000000000000004437, 0.000000000235, 26) + ", ";
                s += addRandomNumber(-0.0000003441, -0.00000000119, 12) + ", ";
                s += addRandomNumber(-0.000003382, -0.00000001174, 10) + ", ";
                s += addRandomNumber(-0.0000000000000001423, 0.2543, 21) + ", ";
                s += addRandomNumber(-0.0000714, 0.0001149, 9) + ", ";
                s += addRandomNumber(-0.0007142, 0.001148, 8) + ", ";
                s += addRandomNumber(-0.0005525, 0.004854, 7) + ", ";
                s += addRandomNumber(-0.01494, 0.006451, 8) + ", ";
                s += addRandomNumber(-0.008633, 0.07585, 6) + ", ";
                s += addRandomNumber(-0.2335, 0.1008, 6) + ", ";
                s += addRandomNumber(-2.33, 1.009, 5) + ", ";
                s += addRandomNumber(0, 2.436, 3) + ", ";
                s += "0,";
                */

            }

            // context features
            s += addRandomGaussian(253,313,1) + ", ";         //temperature in Kelvin
            s += addRandomNumber(0,100,0) + ", ";             // humidity
            s += addRandomNumber(0,100,0) + ", ";             // clouds
            s += addRandomNumber(0,1.0,2) + ", ";             // rain
            s += "0, ";                                       // snow, kept out for now
            s += addRandomNumber(50, 50000, 0) + ", ";        // visibility
            s += addRandomNumber(0,3,0) + ", ";               // season
            s += addRandomNumber(0,6,0) + ", ";               // day
            s += addRandomNumber(0,23,0) + ", ";              // hour
            s += addRandomNumber(51.1,51.4,8) + ", ";         // latitude
            s += addRandomNumber(6.65, 6.95, 8) + ", ";       // longitude

            // Accelerometer
            s += addRandomHalfGaussian(0.25, 25, 16) + ", ";  // average
            s += addRandomHalfGaussian(1, 70, 9) + ", ";      // max
            s += addRandomHalfGaussian(0, 0.5, 9) + ", ";     // min
            s += addRandomHalfGaussian(0, 50, 9) + ", ";      // moving average
            s += addRandomHalfGaussian(0.25, 25, 16) + ", ";
            s += addRandomHalfGaussian(1, 70, 9) + ", ";
            s += addRandomHalfGaussian(0, 0.5, 9) + ", ";
            s += addRandomHalfGaussian(0, 50, 9) + ", ";
            s += addRandomHalfGaussian(0.25, 25, 16) + ", ";
            s += addRandomHalfGaussian(1, 70, 9) + ", ";
            s += addRandomHalfGaussian(0, 0.5, 9) + ", ";
            s += addRandomHalfGaussian(0, 50, 9) + ", ";

            // Gyroscope, activities learning, travelling, jogging
            s += addOneOfRandomNumbers(new Double[] {-0.0035,-0.0015, -0.2,0.2,     -7.0,10.0}, 16) + ", ";
            s += addOneOfRandomNumbers(new Double[] {-0.002,0.0,       0.1,0.3,      5.0,10.0},  9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {-0.005,-0.003,   -0.3,-0.1,    -7.0,-2.0},  9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {-0.0045,-0.0005, -0.25,0.25,   -9.0,13.0},  9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.001,0.003,     -0.1,0.1,     -7.0,10.0}, 16) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.0025,0.004,     0.05, 0.15,   5.0,10.0},  9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.0,0.0015,      -0.15,-0.05,  -7.0,-2.0},  9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.0005,0.0035,   -0.125,0.125, -9.0,13.0},  9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.0025,0.0045,   -0.1,0.1,     -4.0,4.0},  16) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.004,0.006,      0.05,0.15,    4.0,8.0},   9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.001,0.003,     -0.15,-0.05,  -8.0,-4.0},  9) + ", ";
            s += addOneOfRandomNumbers(new Double[] {0.0015,0.0055,   -0.125,0.125, -6.0,6.0},   9);

            s += "]}, \t";
        }

            if(n > 0) {s = s.substring(0,s.length() - 3);}
            
            s += "]";
            return s;
    }

        private static void getClassLabels() {
                File folder = new File("../mp3/tracks");
                File[] listOfFiles = folder.listFiles(new FilenameFilter() {
                    public boolean accept(File dir, String name) {
                        return name.endsWith(".mp3");
                    }
                });

                if(listOfFiles != null) {
                        for (File f : listOfFiles) {
                                if (f.isFile()) {titles2.add(f.getName()); }
                        }
                }
        }

        private static String addClassLabels(boolean sample) {
                String t[];
                if(sample)
                        t = titles;
                else {
                        if(titles2.size() == 0) {getClassLabels();}
                        t = titles2.toArray(new String[0]);
                }
                String s = "";

                for(int i = 0; i < t.length; i++) {
                        s += "'" + t[i] + "', ";
                        if(i == t.length -1) s = s.substring(0,s.length()-2);
                }

                return s;
        }

        private static String addRandomNumber(double lower, double upper, int precision) {
                double d =  new Random().nextFloat() * (upper - lower) + lower;
                return prettyPrint(d, precision);
        }

        private static String addOneOfRandomNumbers(Double[] bounds, int precision) {
                int n = new Random().nextInt(bounds.length/2);
                return addRandomNumber(bounds[2 * n], bounds[2 * n + 1], precision);
        }

        private static String addRandomGaussian(double lower, double upper, int precision) {
                double d =  new Random().nextGaussian() * (upper - lower) + (upper - lower)/2;      // mean is mid of interval
                return prettyPrint(d, precision);                 // shift after getting absolute value
        }

        // "Uses" only the right half of a Gaussian normal distribution
        private static String addRandomHalfGaussian(double lower, double upper, int precision) {
                double d =  new Random().nextGaussian() * (upper - lower);
                return prettyPrint(Math.abs(d) + lower, precision);                 // shift after getting absolute value
        }

        private static String prettyPrint(double number, int precision) {
                DecimalFormat format = (DecimalFormat) DecimalFormat.getInstance();
                format.setMaximumFractionDigits(precision);
                format.setGroupingUsed(false);

                // Print dot instead of comma as separator
                DecimalFormatSymbols custom=new DecimalFormatSymbols();
                custom.setDecimalSeparator('.');
                format.setDecimalFormatSymbols(custom);

                return format.format(number);
        }

        private static String addTitle(boolean fromDirectory) {
        	if(fromDirectory) {
        		titleNumber = new Random().nextInt(titles2.size());
                return "'" + titles2.get(titleNumber) + "'";
        	} else {
        		titleNumber = new Random().nextInt(titles.length);
        		return "'" + titles[titleNumber] + "'";
        	}
        }

        private static String addMusicFeatures() {
                return features[titleNumber];
        }
}
